// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Permissions {
  id        String    @id
  name      String    @db.VarChar(150)
  key       String    @unique @db.VarChar(70)
  status    Boolean   @default(false)
  parent    String?   @db.VarChar(100)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  roles Roles[]
}

model Roles {
  id        String    @id
  name      String    @db.VarChar(150)
  key       String    @unique @db.VarChar(70)
  status    Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  permissions Permissions[]
  users       Users[]
}

model Users {
  id                   String    @id
  username             String    @unique @db.VarChar(150)
  email                String    @unique @db.VarChar(150)
  password             String?   @db.VarChar(150)
  status               Boolean   @default(false)
  firstName            String    @db.VarChar(250)
  lastName             String?   @db.VarChar(250)
  picture              String?   @db.LongText()
  identificationNumber String?   @db.VarChar(250)
  accessToken          String?   @db.LongText()
  createdAt            DateTime  @default(now())
  updatedAt            DateTime? @updatedAt

  role   Roles?  @relation(fields: [roleId], references: [id])
  roleId String?

  department   Departments? @relation(fields: [departmentId], references: [id])
  departmentId String?

  contact   Contacts? @relation(fields: [contactId], references: [id])
  contactId String?
}

model Departments {
  id        String    @id
  name      String    @unique @db.VarChar(250)
  status    Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  users Users[]
}

model Contacts {
  id         String    @id
  name       String    @db.VarChar(250)
  phone      String    @db.VarChar(20)
  prefix     String    @db.VarChar(20)
  address    String?   @db.VarChar(250)
  email      String?   @db.VarChar(150)
  country    String    @db.VarChar(50)
  default    Boolean   @default(false)
  postalCode String?   @db.VarChar(50)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt

  company   Companies? @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId String?

  users Users[]

  clients   Clients? @relation(fields: [clientsId], references: [id])
  clientsId String?
}

model Companies {
  id                   String    @id
  code                 String    @db.VarChar(250)
  name                 String    @db.VarChar(250)
  status               Boolean   @default(false)
  vatNumber            String?   @db.VarChar(150)
  identificationNumber String?   @db.VarChar(150)
  fiscalName           String?   @db.VarChar(250)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime? @updatedAt

  contacts Contacts[]
  clients  Clients[]
}

model Clients {
  id                   String    @id
  code                 String    @db.VarChar(250)
  name                 String    @db.VarChar(250)
  identificationNumber String?   @db.VarChar(150)
  status               Boolean   @default(true)
  picture              String?   @db.LongText()
  createdAt            DateTime  @default(now())
  updatedAt            DateTime? @updatedAt

  company   Companies? @relation(fields: [companyId], references: [id])
  companyId String?

  contacts Contacts[]
}
